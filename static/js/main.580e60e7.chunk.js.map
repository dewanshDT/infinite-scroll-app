{"version":3,"sources":["store.js","components/BackBtn.jsx","components/ContentBlock.jsx","components/Content.jsx","App.js","index.js"],"names":["useStore","create","set","URL","rawJSON","addJSON","JSON","state","map","data","setJSON","BackBtn","scrollUp","className","onClick","focusable","role","xmlns","viewBox","fill","d","ContentBlock","item","index","lastElementRef","length","ref","alt_description","src","urls","small","Content","useState","pageNumber","setPageNumber","loading","setLoading","json","contentList","useRef","observer","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prvPgNo","observe","useEffect","a","axios","get","res","console","log","results","scroll","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQASeA,E,MAPEC,IAAO,SAAAC,GAAG,MAAK,CAC5BC,IAAK,6KACLC,QAAS,GACTC,QAAS,SAACC,GAAD,OAAUJ,GAAI,SAAAK,GAAK,MAAK,CAACH,QAAQ,GAAD,mBAAMG,EAAMH,SAAZ,CAAqBE,EAAKE,KAAI,SAAAC,GAAI,OAAIA,YAC/EC,QAAS,SAACJ,GAAD,OAAUJ,GAAI,SAAAK,GAAK,MAAK,CAACH,QAASE,W,OCIhCK,EARC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACA,qBAAKC,UAAU,YAAYC,QAASF,EAApC,SACI,qBAAK,cAAY,OAAOG,UAAU,QAAQ,cAAY,MAAM,YAAU,WAAWC,KAAK,MAAMC,MAAM,6BAA6BC,QAAQ,cAAvI,SAAqJ,sBAAMC,KAAK,eAAeC,EAAE,qQCcxKC,EAjBM,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,eACnC,OAAID,EAAQ,IADoD,EAAbE,OAG/C,sBAAKZ,UAAU,QAAoBa,IAAKF,EAAxC,UACE,6BAAKF,EAAKK,kBACV,qBAAKC,IAAKN,EAAKO,KAAKC,UAFMP,GAO5B,sBAAKV,UAAU,QAAf,UACE,6BAAKS,EAAKK,kBACV,qBAAKC,IAAKN,EAAKO,KAAKC,UAFMP,IC6CnBQ,EAnDC,WACd,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAOrC,GAAS,SAACO,GAAD,OAAWA,EAAMH,WACjCM,EAAUV,GAAS,SAACO,GAAD,OAAWA,EAAMG,WACpC4B,EAAcC,mBAGdC,EAAWD,mBACXf,EAAiBiB,uBAAY,SAAAC,GAC3BP,IACAK,EAASG,SAASH,EAASG,QAAQC,aACvCJ,EAASG,QAAU,IAAIE,sBAAqB,SAAAC,GACrCA,EAAQ,GAAGC,gBACVb,GAAc,SAAAc,GAAO,OAAIA,EAAU,QAGxCN,GAAMF,EAASG,QAAQM,QAAQP,OAGtCQ,oBAAS,sBAAC,4BAAAC,EAAA,6DACRf,GAAW,GADH,kBAIYgB,IAAMC,IAAN,sDAAyDpB,EAAzD,kIAJZ,OAIAqB,EAJA,OAKNC,QAAQC,IAAIF,EAAI7C,MACNC,EAAN2B,EAAc,GAAD,mBAAKA,GAAL,YAAciB,EAAI7C,KAAKgD,UAC3BH,EAAI7C,KAAKgD,SACtBF,QAAQC,IAAI,8CACZpB,GAAW,GATL,kDAWNmB,QAAQC,IAAR,MAXM,0DAaP,CAACvB,IAMJ,OACE,sBAAKpB,UAAU,cAAf,UACE,cAAC,EAAD,CAASD,SANI,WACf0B,EAAYK,QAAQe,OAAO,EAAG,MAM5B,qBAAK7C,UAAU,eAAea,IAAKY,EAAnC,SACGD,EAAK7B,KAAI,SAACc,EAAMC,GACb,OAAO,cAAC,EAAD,CAAcD,KAAMA,EAAkBC,MAAOA,EAAOE,OAAQY,EAAKZ,OAAQD,eAAgBA,GAA1DD,YCrCnCoC,MAVf,WACE,OACE,qCACA,iDACA,cAAC,EAAD,IACA,yGCJJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.580e60e7.chunk.js","sourcesContent":["import create from 'zustand';\r\n\r\nconst useStore = create(set => ({\r\n    URL: \"https://api.unsplash.com/search/photos?page=1&query=office&client_id=MrsptAEkuNtiOj9sakWFD9PmsE7roU5qo4Zub6CQgSk&client_secret=F19zKmUGoRQy1QY-FfEodfvh6jKPORIaDZLM7GHL_Nw\",\r\n    rawJSON: [],\r\n    addJSON: (JSON) => set(state => ({rawJSON: [...state.rawJSON, JSON.map(data => data)]})),\r\n    setJSON: (JSON) => set(state => ({rawJSON: JSON}))\r\n}));\r\n\r\nexport default useStore;","import React from \"react\";\r\n\r\nconst BackBtn = ({scrollUp}) => {\r\n  return (\r\n  <div className=\"arrow-btn\" onClick={scrollUp}>\r\n      <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrow-up\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"></path></svg>\r\n  </div>\r\n  )\r\n};\r\n\r\nexport default BackBtn;\r\n","import React from \"react\";\r\n\r\nconst ContentBlock = ({ item, index, lastElementRef, length }) => {\r\n  if (index + 1 === length)\r\n    return (\r\n      <div className=\"image\" key={index} ref={lastElementRef}>\r\n        <h4>{item.alt_description}</h4>\r\n        <img src={item.urls.small} />\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div className=\"image\" key={index}>\r\n        <h4>{item.alt_description}</h4>\r\n        <img src={item.urls.small} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ContentBlock;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport useStore from \"../store\";\r\nimport BackBtn from \"./BackBtn\";\r\nimport ContentBlock from \"./ContentBlock\";\r\n\r\nconst Content = () => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const json = useStore((state) => state.rawJSON);\r\n  const setJSON = useStore((state) => state.setJSON);\r\n  const contentList = useRef();\r\n\r\n  // observer --->\r\n  const observer = useRef();\r\n  const lastElementRef = useCallback(node => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n          if(entries[0].isIntersecting) {\r\n              setPageNumber(prvPgNo => prvPgNo + 1);\r\n          }\r\n      });\r\n      if(node) observer.current.observe(node);\r\n  });\r\n\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    try {\r\n      // I directly gave the client id and secrete here, but I would be making a production version of this app I would most probably use environment variables to store them.\r\n      const res = await axios.get(`https://api.unsplash.com/search/photos?page=${pageNumber}&query=office&client_id=MrsptAEkuNtiOj9sakWFD9PmsE7roU5qo4Zub6CQgSk&client_secret=F19zKmUGoRQy1QY-FfEodfvh6jKPORIaDZLM7GHL_Nw`);\r\n      console.log(res.data);\r\n      if (json) setJSON([...json, ...res.data.results]);\r\n      else setJSON(res.data.results);\r\n      console.log(\"more Images loded succesfully ðŸ“·\");\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [pageNumber]);\r\n\r\n  const scrollUp = () => {\r\n    contentList.current.scroll(0, 0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-box\">\r\n      <BackBtn scrollUp={scrollUp} />\r\n      <div className=\"content-list\" ref={contentList}>\r\n        {json.map((item, index) => {\r\n            return <ContentBlock item={item} key={index} index={index} length={json.length} lastElementRef={lastElementRef} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import './App.css';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <>\n    <h1>Infinite Scroll</h1>\n    <Content />\n    <h4>Infinite scroll example, by Dewansh. Images loaded via unsplash api</h4>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}